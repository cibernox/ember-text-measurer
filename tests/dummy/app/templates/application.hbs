<h1>Ember-text-measurer</h1>
<p>
  This addon provides a very simple service to measure the width of a string
  using an in-memory canvas, so it doesn't cause any layout reflow for max
  performance.
</p>
<p>
  Although the service is quite simple and you could implement it yourself,
  using this addon from withing another addons will ensure that there is only
  one singleton canvas in each app, that is shared across all components, addons and engines.
</p>

<h3>Demo</h3>

<p>One possible usage of this is to make an input grow as you type:</p>

<input type="text" id="demo-1" style={{demo1Style}} value={{demo1text}} oninput={{action (mut demo1text) value="target.value"}}>

<p>
  Another possible usage is to calculate the ideal font size to make a text
  fill the available space entirely.
</p>

<p>
  The range input below sets the width of the div and the font-size to fully fill that
  space is calculated on the canvas.
</p>

<input type="text" id="demo-1" value={{demo2text}} oninput={{action (mut demo2text) value="target.value"}}>
<input type="range" min="80" max="1280" value={{demo2width}} oninput={{action (mut demo2width) value="target.value"}}>

<div id="demo-2" style={{demo2Style}}>{{demo2text}}</div>

<p>
  You can also use the <code>lines</code> method to approximate the number of lines a text will
  require on a textarea, perhaps to make it grow automatically.
</p>
<textarea rows={{demo3lines}} value={{demo3text}} oninput={{action (mut demo3text) value="target.value"}} style="padding: 0; width: 300px; resize: none;"></textarea>
<p>The number of lines is: {{demo3lines}}</p>

<em>
  Please note than measuring lines is a far more expensive calculation
  than measuring width.
  While still pretty fast, texts over a few thousand words might take a noticiable
  time.
</em>
